#!/bin/bash
# Pre-commit hook for cloud-deploy
# This hook runs before each commit to ensure code quality

set -e

echo "Running pre-commit checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}✓${NC} $2"
    else
        echo -e "${RED}✗${NC} $2"
    fi
}

# Check if Go is installed
if ! command -v go &> /dev/null; then
    echo -e "${RED}Error: Go is not installed${NC}"
    exit 1
fi

# Check code formatting
echo ""
echo -e "${YELLOW}Checking code formatting...${NC}"
UNFORMATTED=$(gofmt -l .)
if [ -n "$UNFORMATTED" ]; then
    echo -e "${RED}✗ Code is not formatted. Please run:${NC}"
    echo "  go fmt ./..."
    echo ""
    echo "Unformatted files:"
    echo "$UNFORMATTED"
    exit 1
fi
print_status 0 "Code formatting"

# Run go vet
echo ""
echo -e "${YELLOW}Running go vet...${NC}"
if go vet ./... 2>&1; then
    print_status 0 "go vet"
else
    print_status 1 "go vet"
    exit 1
fi

# Run tests
echo ""
echo -e "${YELLOW}Running tests...${NC}"
if go test -short ./... > /dev/null 2>&1; then
    print_status 0 "Tests"
else
    echo -e "${RED}✗ Tests failed. Running with verbose output:${NC}"
    go test -short ./...
    exit 1
fi

# Run go mod tidy check
echo ""
echo -e "${YELLOW}Checking go.mod and go.sum...${NC}"
cp go.mod go.mod.bak
cp go.sum go.sum.bak
go mod tidy
if ! diff -q go.mod go.mod.bak > /dev/null 2>&1 || ! diff -q go.sum go.sum.bak > /dev/null 2>&1; then
    echo -e "${RED}✗ go.mod or go.sum is not tidy. Please run:${NC}"
    echo "  go mod tidy"
    mv go.mod.bak go.mod
    mv go.sum.bak go.sum
    exit 1
fi
rm go.mod.bak go.sum.bak
print_status 0 "go.mod and go.sum are tidy"

echo ""
echo -e "${GREEN}All pre-commit checks passed!${NC}"
echo ""
